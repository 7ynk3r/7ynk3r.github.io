name: Create New Blog Post

on:
  workflow_dispatch: # Allows manual triggering
  schedule:
    - cron: "0 12 * * 1" # Run every Monday at 5 AM PT (12 PM UTC)

jobs:
  create-blog-post:
    runs-on: ubuntu-latest
    permissions:
      contents: "write" # Required to commit the new file
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Get today's date and calendar info
        id: date_info
        run: |
          TODAY=$(date '+%Y-%m-%d')
          DAY_OF_WEEK=$(date '+%A')
          MONTH_DAY=$(date '+%B %d')
          echo "today=$TODAY" >> $GITHUB_OUTPUT
          echo "day_of_week=$DAY_OF_WEEK" >> $GITHUB_OUTPUT
          echo "month_day=$MONTH_DAY" >> $GITHUB_OUTPUT
          echo "Today is $DAY_OF_WEEK, $MONTH_DAY ($TODAY)"

      - name: Research current trends and generate blog post
        id: gemini_run
        uses: google-github-actions/run-gemini-cli@v0.1.12
        with:
          prompt: |
            Write a complete blog post for JM's software engineering blog. Today is ${{ steps.date_info.outputs.day_of_week }}, ${{ steps.date_info.outputs.month_day }}.

            The blog focuses on engineering leadership, AI & development, systems thinking, and team dynamics. Check the about.md and recent posts in _posts/ to understand the topics and style.

            Create a complete, ready-to-publish blog post starting with this exact YAML frontmatter format:

            ---
            layout: post
            title: "Your Compelling Title Here"
            date: ${{ steps.date_info.outputs.today }}
            description: "Brief one-sentence description of the post"
            ---

            Then write 800-1200 words covering a current trend in:
            - Engineering leadership and team dynamics
            - AI's impact on software development
            - System architecture and scalability
            - Technical career growth
            - Modern development practices

            Use markdown with clear headings (##, ###), focus on actionable insights, and match JM's writing style: thoughtful, practical, and directly relevant to today's engineering challenges.

            Write the complete post now, do not ask for confirmation. Do not wrap the YAML frontmatter in code blocks.
          gemini_api_key: ${{ secrets.GEMINI_API_KEY }}
          gemini_cli_version: "latest"
          gemini_debug: false
          gemini_model: "gemini-1.5-flash"

      - name: Create blog post file
        run: |
          # Extract title from the generated content and create filename
          TITLE_SLUG=$(echo "$GEMINI_SUMMARY" | grep '^title:' | head -1 | sed 's/title: *"//g' | sed 's/".*//g' | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9 ]//g' | tr ' ' '-' | sed 's/--*/-/g' | sed 's/^-//g' | sed 's/-$//g')

          # If title extraction fails, use a fallback
          if [ -z "$TITLE_SLUG" ] || [ ${#TITLE_SLUG} -lt 5 ]; then
            TITLE_SLUG="new-engineering-insights"
          fi

          FILENAME="_posts/${{ steps.date_info.outputs.today }}-${TITLE_SLUG}.md"

          echo "Creating blog post: $FILENAME"
          echo "Title slug: $TITLE_SLUG"

          if [ -n "$GEMINI_SUMMARY" ]; then
            echo "$GEMINI_SUMMARY" > "$FILENAME"
            echo "✅ Blog post created successfully: $FILENAME"
            echo "Post preview:"
            head -20 "$FILENAME"
          else
            echo "❌ Error: No content generated"
            echo "Error details: $GEMINI_ERROR"
            exit 1
          fi

          # Set output for next step
          echo "filename=$FILENAME" >> $GITHUB_ENV
        env:
          GEMINI_SUMMARY: ${{ steps.gemini_run.outputs.summary }}
          GEMINI_ERROR: ${{ steps.gemini_run.outputs.error }}

      - name: Commit and push new blog post
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          git add ${{ env.filename }}
          git commit -m "Add new blog post: $(basename ${{ env.filename }} .md | sed 's/[0-9-]*//g' | tr '-' ' ' | sed 's/^ *//' | sed 's/ *$//')"
          git push
